# docker-compose.dev.yml
services:
  db:
    image: postgres:15
    environment:
      - POSTGRES_USER=myuser
      - POSTGRES_PASSWORD=mysecretpassword
      - POSTGRES_DB=webudget_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U myuser -d webudget_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    build:
      context: ./server
      # Target the 'builder' stage, which has devDependencies installed
      target: builder
    command: npm run dev # Use the dev script with nodemon for hot-reloading
    volumes:
      # Mount the server source code directly into the container
      - ./server:/usr/src/app
      # Do not overwrite node_modules with a local empty folder
      - /usr/src/app/node_modules
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - LOG_LEVEL=debug
      - PORT=3000
      - DATABASE_URL=postgresql://myuser:mysecretpassword@db:5432/webudget_db
      - JWT_SECRET=fallback-jwt-secret-for-compatibility
      - SUPABASE_JWT_SECRET=tjeblT5WeN2CHzwh4CUFiovuPklmPkZYpt/G8KaRi9W6l5wIPrW7trJuLRbNJtu8yu/LEmcOssVlpHoJt/S1Tg==
      - ENCRYPTION_KEY=9617526FA1198BD31839CD25C59DE618CA708605CA64EE360669A97F346646CA
      - PLAID_CLIENT_ID=619bb9d73067ce00137c4d69
      - PLAID_SECRET=978cd31976fe63b2777de3bb82da6a
      - PLAID_ENV=sandbox
    depends_on:
      db:
        condition: service_healthy

volumes:
  postgres_data: 