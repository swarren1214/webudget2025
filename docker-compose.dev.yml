# docker-compose.dev.yml
services:
  db:
    image: postgres:15
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    build:
      context: ./server
      # Target the 'builder' stage, which has devDependencies installed
      target: builder
    command: npm run dev # Use the dev script with nodemon for hot-reloading
    volumes:
      # Mount the server source code directly into the container
      - ./server:/usr/src/app
      # Do not overwrite node_modules with a local empty folder
      - /usr/src/app/node_modules
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - LOG_LEVEL=debug
      - PORT=3000
      - DATABASE_URL=${DATABASE_URL}
      - JWT_SECRET=${JWT_SECRET}
      - SUPABASE_JWT_SECRET=${SUPABASE_JWT_SECRET}
      - ENCRYPTION_KEY=${ENCRYPTION_KEY}
      - PLAID_CLIENT_ID=${PLAID_CLIENT_ID}
      - PLAID_SECRET=${PLAID_SECRET}
      - PLAID_ENV=${PLAID_ENV}
    depends_on:
      db:
        condition: service_healthy

volumes:
  postgres_data: 