services:
  # --- Backend API Service ---
  api:
    build: ./server
    restart: unless-stopped
    env_file:
      - ./.env
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
    ports:
      - "3000:3000"
    depends_on:
      db:
        condition: service_healthy # Wait for the DB to be healthy

  migrate:
    build:
      context: ./server
    image: webudget-api # Use the same image as the api service
    depends_on:
      db:
        condition: service_healthy # Wait for the DB to be healthy
    env_file:
      - .env
    command: [ "npm", "run", "migrate:up" ]

  # --- PostgreSQL Database Service ---
  db:
    image: postgres:15-alpine
    restart: unless-stopped
    env_file:
      - ./.env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    # Add a healthcheck to ensure postgres is ready before other services connect
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"
        ]
      interval: 5s
      timeout: 5s
      retries: 5

  # --- API Documentation Service ---
  docs:
    image: swaggerapi/swagger-ui:v5.17.14
    restart: unless-stopped
    env_file:
      - ./.env
    ports:
      - "8080:8080"
    environment:
      URL: /webudget_api_spec_v1.yaml
    volumes:
      - ./server/webudget_api_spec_v1.yaml:/usr/share/nginx/html/webudget_api_spec_v1.yaml

# --- Volumes Definition ---
volumes:
  postgres_data:
